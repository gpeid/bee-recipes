{"version":3,"sources":["components/Footer/Footer.js","components/Header/Header.js","components/Counter/Counter.js","components/Card/Card.js","data/recipesData.js","containers/RecipeContainer.js","Functions.js","pages/RecipeDetails/RecipeDetails.js","pages/RecipePage.js","App.js","serviceWorker.js","index.js","App.module.css","components/Footer/Footer.module.css","components/Header/Header.module.css","containers/RecipeContainer.module.css","components/Card/Card.module.css"],"names":["Footer","react_default","a","createElement","className","styles","footer","Component","Header","header","RecipeCounter","_useState","useState","_useState2","Object","slicedToArray","count","setCount","console","log","index_es","variant","color","onClick","Card","props","ingredients","id","index","name","diet_type","key","card","map","ingredient","Checkbox_default","concat","type","value","htmlFor","Link","to","pathname","state","RECIPES","notes","RecipeContainer","recipes","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","randomRecipe","components_Card_Card","assign","recipe","withRouter","location","RecipePage","pages_RecipeDetails_RecipeDetails","App","HashRouter","basename","Header_Header","Route","exact","path","component","Switch","render","Footer_Footer","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","App-logo","App-logo-spin","App-header","App-link","grid"],"mappings":"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","file":"static/js/main.2b017a47.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from './Footer.module.css'\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className={styles.footer}>\n        <p>Footer is here.</p>\n      </footer>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport styles from './Header.module.css'\n\nexport default class Header extends Component {\n  render() {\n    return (\n      <header className={styles.header}>\n        <h1>BEE RECIPES</h1>\n      </header>\n    );\n  }\n}","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\n\nexport function RecipeCounter() {\n\tconst [count, setCount] = useState(0);\n\tconsole.log(count);\n\treturn (\n\t\t<div>\n\t\t\t<p>{count} people have used this recipe</p>\n\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => setCount(count + 1)}>\n\t\t\t\tI've used this recipe!\n\t\t\t</Button>\n\t\t</div>\n\t);\n}","import React from 'react';\nimport styles from './Card.module.css';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { RecipeCounter } from '../Counter/Counter';\nimport { Link } from 'react-router-dom';\n\nconst Card = (props) => {\n\tconst { ingredients, id, index, name, diet_type } = props;\n\n\tconst displayIngredients = () => {\n\t\treturn ingredients.map((ingredient, index) => (\n\t\t\t<div key={index}>\n\t\t\t\t<Checkbox\n\t\t\t\t\tid={`${id}_${name}_${index}`}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tkey={ingredient}\n\t\t\t\t\tvalue={ingredient}\n\t\t\t\t/>{' '}\n\t\t\t\t<label htmlFor={`${id}_${name}_${index}`}>{ingredient}</label>\n\t\t\t</div>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div key={id} className={styles.card}>\n\t\t\t<h3>\n\t\t\t\t{index}) ID:{id} - {name}\n\t\t\t</h3>\n\t\t\t<RecipeCounter />\n\t\t\t<h4>Diet Type: {diet_type}</h4>\n\t\t\t<h4>Ingredients:</h4>\n\t\t\t{displayIngredients()}\n\n\t\t\t<Link\n\t\t\t\tto={{\n\t\t\t\t\tpathname: `/recipe/${id}`,\n\t\t\t\t\tstate: props,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tGo to Recipe!\n\t\t\t</Link>\n\t\t</div>\n\t);\n};\n\nexport default Card;\n","export const RECIPES = [\n\t{\n\t\tid: 0,\n\t\tname: 'thit kho',\n\t\tingredients: ['pork', 'coconut soda', 'soy sauce'],\n\t\tdiet_type: 'meat',\n\t\tnotes: 'Sometimes pepper it depends you know if i want it spicy or not',\n\t},\n\t{\n\t\tid: 1,\n\t\tname: 'fried rice',\n\t\tingredients: ['rice', 'peas'],\n\t\tdiet_type: 'veg',\n\t\tnotes: '',\n\t},\n\t{\n\t\tid: 2,\n\t\tname: 'meatless jerk stirfry',\n\t\tingredients: [\n\t\t\t'meatless beef tips',\n\t\t\t'jerk seasoning',\n\t\t\t'bell peppers',\n\t\t\t'onions',\n\t\t\t'meatless crumble',\n\t\t],\n\t\tdiet_type: 'veg',\n\t\tnotes: '',\n\t},\n\n\t{\n\t\tid: 3,\n\t\tname: 'mushroom and beef risotto',\n\t\tingredients: [\n\t\t\t'meatless beef tips',\n\t\t\t'jerk seasoning',\n\t\t\t'bell peppers',\n\t\t\t'onions',\n\t\t\t'meatless crumble',\n\t\t],\n\t\tdiet_type: 'meat',\n\t\tnotes: '',\n\t},\n\t{\n\t\tid: 4,\n\t\tname: 'baked lemon chicken',\n\t\tingredients: ['chicken', 'lemon pepper'],\n\t\tdiet_type: 'meat',\n\t\tnotes: '',\n\t},\n\t{\n\t\tid: 5,\n\t\tname: 'chicken kho',\n\t\tingredients: ['chicken', 'coconut soda', 'soy sauce'],\n\t\tdiet_type: 'meat',\n\t\tnotes: 'Sometimes pepper it depends you know if i want it spicy or not',\n\t},\n\t{\n\t\tid: 6,\n\t\tname: 'Seafood boil sauce',\n\t\tingredients: ['butter', 'garlic', 'pepper', 'lemon pepper'],\n\t\tdiet_type: 'seafood',\n\t\tnotes: '',\n\t},\n\t{\n\t\tid: 7,\n\t\tname: 'Seafood boil sauce',\n\t\tingredients: ['butter', 'garlic', 'pepper', 'lemon pepper'],\n\t\tdiet_type: 'seafood',\n\t\tnotes: '',\n\t},\n\t{\n\t\tid: 8,\n\t\tname: 'egg with truffle goat cheese tomato pesto on toast',\n\t\tingredients: ['egg', 'truffle goat', 'cheese', 'tomato pesto', 'toast'],\n\t\tdiet_type: 'vegetarian',\n\t\tnotes: '',\n\t},\n\t{\n\t\tid: 9,\n\t\tname: 'Tomato pesto, parmesan, and fried onions pasta served cold',\n\t\tingredients: ['Tomato pesto', 'parmesan', 'fried onions', 'pasta'],\n\t\tdiet_type: 'vegetarian',\n\t\tnotes: '',\n\t},\n];\n","import React from 'react';\nimport styles from './RecipeContainer.module.css';\nimport Card from '../components/Card/Card';\nimport { shuffle } from './../Functions';\nimport { RECIPES } from './../data/recipesData';\n\n// import Checkbox from \"@material-ui/core/Checkbox\";\n\nconst RecipeContainer = () => {\n\tlet recipes = shuffle(RECIPES);\n\n\tlet randomRecipe =\n\t\trecipes[Math.floor(Math.random() * Math.floor(recipes.length))];\n\t// var recipeMap = () => {\n\t//   return recipes.map((recipe,index) => (\n\t//     <Recipe />\n\t//   ));\n\t// };\n\treturn (\n\t\t<div className={styles.recipes}>\n\t\t\t<Card {...randomRecipe} index=\"Random\" />\n\t\t\t{// recipeMap()\n\t\t\trecipes.map((recipe, index) => (\n\t\t\t\t<Card {...recipe} index={index} key={index} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default RecipeContainer;","/**\n * Randomly shuffle an array\n * https://stackoverflow.com/a/2450976/1293256\n * @param  {Array} array The array to shuffle\n * @return {String}      The first item in the shuffled array\n */\nexport const shuffle = function(array) {\n  var currentIndex = array.length;\n  var temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst RecipeDetails = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<h1>{props.location.state.name}</h1>\n\t\t</div>\n\t);\n};\nexport default withRouter(RecipeDetails);\n","import React from 'react';\nimport RecipeDetails from './RecipeDetails/RecipeDetails';\n\nconst RecipePage = (props) => {\n  \n  console.log(props);\n  return (\n      <RecipeDetails props={props}/>\n  );\n};\n\nexport default RecipePage;","import React from 'react';\nimport styles from './App.module.css';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport RecipeContainer from './containers/RecipeContainer';\nimport Card from './components/Card/Card';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport RecipePage from './pages/RecipePage';\n\nconst App = () => {\n\treturn (\n\t\t<HashRouter basename=\"/\">\n\t\t\t<div className={styles.App}>\n\t\t\t\t<Header />\n\t\t\t\t<Route exact path=\"/\" component={RecipeContainer} />\n\t\t\t\t<Route path=\"/random\" component={Card} />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/recipe/:id\" render={RecipePage} />\n\t\t\t\t</Switch>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t</HashRouter>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1lY2G\",\"App-logo\":\"App_App-logo__2ML4X\",\"App-logo-spin\":\"App_App-logo-spin__17dSQ\",\"App-header\":\"App_App-header__2Fxq9\",\"App-link\":\"App_App-link__6w3jw\",\"grid\":\"App_grid__2mP4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3n39h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3zZTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipes\":\"RecipeContainer_recipes__1oADa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2alt9\"};"],"sourceRoot":""}